/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 192770.0, "series": [{"data": [[0.0, 0.0], [0.1, 66.0], [0.2, 67.0], [0.3, 67.0], [0.4, 68.0], [0.5, 68.0], [0.6, 68.0], [0.7, 68.0], [0.8, 69.0], [0.9, 69.0], [1.0, 69.0], [1.1, 69.0], [1.2, 69.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 71.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 71.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 71.0], [3.5, 71.0], [3.6, 71.0], [3.7, 72.0], [3.8, 72.0], [3.9, 72.0], [4.0, 72.0], [4.1, 72.0], [4.2, 72.0], [4.3, 72.0], [4.4, 72.0], [4.5, 72.0], [4.6, 72.0], [4.7, 72.0], [4.8, 72.0], [4.9, 72.0], [5.0, 72.0], [5.1, 72.0], [5.2, 72.0], [5.3, 72.0], [5.4, 72.0], [5.5, 72.0], [5.6, 72.0], [5.7, 72.0], [5.8, 73.0], [5.9, 73.0], [6.0, 73.0], [6.1, 73.0], [6.2, 73.0], [6.3, 73.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 73.0], [6.8, 73.0], [6.9, 73.0], [7.0, 73.0], [7.1, 73.0], [7.2, 73.0], [7.3, 73.0], [7.4, 73.0], [7.5, 73.0], [7.6, 73.0], [7.7, 73.0], [7.8, 73.0], [7.9, 73.0], [8.0, 73.0], [8.1, 74.0], [8.2, 74.0], [8.3, 74.0], [8.4, 74.0], [8.5, 74.0], [8.6, 74.0], [8.7, 74.0], [8.8, 74.0], [8.9, 74.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 74.0], [10.1, 74.0], [10.2, 74.0], [10.3, 74.0], [10.4, 74.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 75.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 75.0], [12.8, 75.0], [12.9, 75.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 76.0], [14.3, 76.0], [14.4, 76.0], [14.5, 76.0], [14.6, 76.0], [14.7, 76.0], [14.8, 76.0], [14.9, 76.0], [15.0, 76.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 76.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 76.0], [17.9, 76.0], [18.0, 76.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 77.0], [18.9, 77.0], [19.0, 77.0], [19.1, 77.0], [19.2, 77.0], [19.3, 77.0], [19.4, 77.0], [19.5, 77.0], [19.6, 77.0], [19.7, 77.0], [19.8, 77.0], [19.9, 77.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 77.0], [20.9, 77.0], [21.0, 77.0], [21.1, 78.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 78.0], [21.8, 78.0], [21.9, 78.0], [22.0, 78.0], [22.1, 78.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 78.0], [22.6, 78.0], [22.7, 78.0], [22.8, 78.0], [22.9, 78.0], [23.0, 78.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 78.0], [24.2, 78.0], [24.3, 78.0], [24.4, 78.0], [24.5, 78.0], [24.6, 78.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 79.0], [25.8, 79.0], [25.9, 79.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 79.0], [27.5, 79.0], [27.6, 80.0], [27.7, 80.0], [27.8, 80.0], [27.9, 80.0], [28.0, 80.0], [28.1, 80.0], [28.2, 80.0], [28.3, 80.0], [28.4, 80.0], [28.5, 80.0], [28.6, 80.0], [28.7, 80.0], [28.8, 80.0], [28.9, 80.0], [29.0, 80.0], [29.1, 80.0], [29.2, 80.0], [29.3, 80.0], [29.4, 80.0], [29.5, 80.0], [29.6, 80.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 80.0], [30.4, 80.0], [30.5, 80.0], [30.6, 80.0], [30.7, 80.0], [30.8, 81.0], [30.9, 81.0], [31.0, 81.0], [31.1, 81.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 81.0], [31.7, 81.0], [31.8, 81.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 81.0], [33.1, 81.0], [33.2, 81.0], [33.3, 82.0], [33.4, 82.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 82.0], [33.9, 82.0], [34.0, 82.0], [34.1, 82.0], [34.2, 82.0], [34.3, 82.0], [34.4, 82.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 82.0], [35.1, 82.0], [35.2, 82.0], [35.3, 82.0], [35.4, 82.0], [35.5, 82.0], [35.6, 82.0], [35.7, 82.0], [35.8, 82.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 83.0], [36.3, 83.0], [36.4, 83.0], [36.5, 83.0], [36.6, 83.0], [36.7, 83.0], [36.8, 83.0], [36.9, 83.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 83.0], [37.8, 83.0], [37.9, 83.0], [38.0, 84.0], [38.1, 84.0], [38.2, 84.0], [38.3, 84.0], [38.4, 84.0], [38.5, 84.0], [38.6, 84.0], [38.7, 84.0], [38.8, 84.0], [38.9, 84.0], [39.0, 84.0], [39.1, 84.0], [39.2, 84.0], [39.3, 84.0], [39.4, 84.0], [39.5, 84.0], [39.6, 84.0], [39.7, 84.0], [39.8, 84.0], [39.9, 84.0], [40.0, 84.0], [40.1, 84.0], [40.2, 85.0], [40.3, 85.0], [40.4, 85.0], [40.5, 85.0], [40.6, 85.0], [40.7, 85.0], [40.8, 85.0], [40.9, 85.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 85.0], [42.0, 85.0], [42.1, 86.0], [42.2, 86.0], [42.3, 86.0], [42.4, 86.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 86.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 87.0], [45.6, 87.0], [45.7, 88.0], [45.8, 88.0], [45.9, 88.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 88.0], [47.3, 88.0], [47.4, 89.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 90.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 90.0], [49.6, 90.0], [49.7, 90.0], [49.8, 90.0], [49.9, 90.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 91.0], [50.8, 91.0], [50.9, 91.0], [51.0, 91.0], [51.1, 91.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 91.0], [51.6, 91.0], [51.7, 91.0], [51.8, 91.0], [51.9, 91.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 91.0], [52.5, 92.0], [52.6, 92.0], [52.7, 92.0], [52.8, 92.0], [52.9, 92.0], [53.0, 92.0], [53.1, 92.0], [53.2, 92.0], [53.3, 92.0], [53.4, 92.0], [53.5, 92.0], [53.6, 92.0], [53.7, 92.0], [53.8, 92.0], [53.9, 92.0], [54.0, 92.0], [54.1, 92.0], [54.2, 92.0], [54.3, 92.0], [54.4, 93.0], [54.5, 93.0], [54.6, 93.0], [54.7, 93.0], [54.8, 93.0], [54.9, 93.0], [55.0, 93.0], [55.1, 93.0], [55.2, 93.0], [55.3, 93.0], [55.4, 93.0], [55.5, 93.0], [55.6, 93.0], [55.7, 93.0], [55.8, 93.0], [55.9, 93.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 93.0], [56.4, 94.0], [56.5, 94.0], [56.6, 94.0], [56.7, 94.0], [56.8, 94.0], [56.9, 94.0], [57.0, 94.0], [57.1, 94.0], [57.2, 94.0], [57.3, 94.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 95.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 95.0], [60.6, 95.0], [60.7, 95.0], [60.8, 95.0], [60.9, 95.0], [61.0, 95.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 96.0], [61.8, 96.0], [61.9, 96.0], [62.0, 96.0], [62.1, 96.0], [62.2, 96.0], [62.3, 96.0], [62.4, 96.0], [62.5, 96.0], [62.6, 96.0], [62.7, 96.0], [62.8, 96.0], [62.9, 96.0], [63.0, 96.0], [63.1, 96.0], [63.2, 96.0], [63.3, 96.0], [63.4, 96.0], [63.5, 96.0], [63.6, 97.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 97.0], [64.1, 97.0], [64.2, 97.0], [64.3, 97.0], [64.4, 97.0], [64.5, 97.0], [64.6, 97.0], [64.7, 97.0], [64.8, 97.0], [64.9, 97.0], [65.0, 97.0], [65.1, 97.0], [65.2, 97.0], [65.3, 97.0], [65.4, 97.0], [65.5, 97.0], [65.6, 97.0], [65.7, 97.0], [65.8, 97.0], [65.9, 97.0], [66.0, 97.0], [66.1, 98.0], [66.2, 98.0], [66.3, 98.0], [66.4, 98.0], [66.5, 98.0], [66.6, 98.0], [66.7, 98.0], [66.8, 98.0], [66.9, 98.0], [67.0, 98.0], [67.1, 98.0], [67.2, 98.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 98.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 98.0], [68.4, 98.0], [68.5, 98.0], [68.6, 98.0], [68.7, 99.0], [68.8, 99.0], [68.9, 99.0], [69.0, 99.0], [69.1, 99.0], [69.2, 99.0], [69.3, 99.0], [69.4, 99.0], [69.5, 99.0], [69.6, 99.0], [69.7, 99.0], [69.8, 99.0], [69.9, 99.0], [70.0, 99.0], [70.1, 99.0], [70.2, 99.0], [70.3, 99.0], [70.4, 99.0], [70.5, 99.0], [70.6, 99.0], [70.7, 99.0], [70.8, 99.0], [70.9, 99.0], [71.0, 99.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 100.0], [73.3, 100.0], [73.4, 100.0], [73.5, 101.0], [73.6, 101.0], [73.7, 101.0], [73.8, 101.0], [73.9, 101.0], [74.0, 101.0], [74.1, 101.0], [74.2, 101.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 101.0], [75.1, 101.0], [75.2, 101.0], [75.3, 101.0], [75.4, 101.0], [75.5, 101.0], [75.6, 101.0], [75.7, 102.0], [75.8, 102.0], [75.9, 102.0], [76.0, 102.0], [76.1, 102.0], [76.2, 102.0], [76.3, 102.0], [76.4, 102.0], [76.5, 102.0], [76.6, 102.0], [76.7, 102.0], [76.8, 102.0], [76.9, 102.0], [77.0, 102.0], [77.1, 102.0], [77.2, 102.0], [77.3, 102.0], [77.4, 102.0], [77.5, 102.0], [77.6, 102.0], [77.7, 102.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 103.0], [79.4, 103.0], [79.5, 103.0], [79.6, 104.0], [79.7, 104.0], [79.8, 104.0], [79.9, 104.0], [80.0, 104.0], [80.1, 104.0], [80.2, 104.0], [80.3, 104.0], [80.4, 104.0], [80.5, 104.0], [80.6, 104.0], [80.7, 104.0], [80.8, 104.0], [80.9, 104.0], [81.0, 104.0], [81.1, 104.0], [81.2, 105.0], [81.3, 105.0], [81.4, 105.0], [81.5, 105.0], [81.6, 105.0], [81.7, 105.0], [81.8, 105.0], [81.9, 105.0], [82.0, 105.0], [82.1, 105.0], [82.2, 105.0], [82.3, 105.0], [82.4, 105.0], [82.5, 105.0], [82.6, 106.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 106.0], [83.6, 106.0], [83.7, 106.0], [83.8, 107.0], [83.9, 107.0], [84.0, 107.0], [84.1, 107.0], [84.2, 107.0], [84.3, 107.0], [84.4, 107.0], [84.5, 107.0], [84.6, 107.0], [84.7, 107.0], [84.8, 107.0], [84.9, 108.0], [85.0, 108.0], [85.1, 108.0], [85.2, 108.0], [85.3, 108.0], [85.4, 108.0], [85.5, 108.0], [85.6, 108.0], [85.7, 109.0], [85.8, 109.0], [85.9, 109.0], [86.0, 109.0], [86.1, 109.0], [86.2, 109.0], [86.3, 109.0], [86.4, 109.0], [86.5, 110.0], [86.6, 110.0], [86.7, 110.0], [86.8, 110.0], [86.9, 110.0], [87.0, 110.0], [87.1, 110.0], [87.2, 111.0], [87.3, 111.0], [87.4, 111.0], [87.5, 111.0], [87.6, 111.0], [87.7, 111.0], [87.8, 112.0], [87.9, 112.0], [88.0, 112.0], [88.1, 112.0], [88.2, 112.0], [88.3, 113.0], [88.4, 113.0], [88.5, 113.0], [88.6, 113.0], [88.7, 113.0], [88.8, 114.0], [88.9, 114.0], [89.0, 114.0], [89.1, 115.0], [89.2, 115.0], [89.3, 115.0], [89.4, 115.0], [89.5, 116.0], [89.6, 116.0], [89.7, 116.0], [89.8, 117.0], [89.9, 117.0], [90.0, 117.0], [90.1, 118.0], [90.2, 118.0], [90.3, 118.0], [90.4, 119.0], [90.5, 119.0], [90.6, 119.0], [90.7, 120.0], [90.8, 120.0], [90.9, 121.0], [91.0, 121.0], [91.1, 122.0], [91.2, 122.0], [91.3, 123.0], [91.4, 123.0], [91.5, 124.0], [91.6, 125.0], [91.7, 126.0], [91.8, 126.0], [91.9, 127.0], [92.0, 128.0], [92.1, 129.0], [92.2, 130.0], [92.3, 132.0], [92.4, 133.0], [92.5, 134.0], [92.6, 135.0], [92.7, 137.0], [92.8, 139.0], [92.9, 141.0], [93.0, 143.0], [93.1, 145.0], [93.2, 147.0], [93.3, 149.0], [93.4, 152.0], [93.5, 156.0], [93.6, 159.0], [93.7, 163.0], [93.8, 165.0], [93.9, 169.0], [94.0, 174.0], [94.1, 179.0], [94.2, 183.0], [94.3, 189.0], [94.4, 196.0], [94.5, 205.0], [94.6, 213.0], [94.7, 221.0], [94.8, 235.0], [94.9, 244.0], [95.0, 259.0], [95.1, 274.0], [95.2, 298.0], [95.3, 313.0], [95.4, 321.0], [95.5, 329.0], [95.6, 336.0], [95.7, 348.0], [95.8, 359.0], [95.9, 366.0], [96.0, 370.0], [96.1, 375.0], [96.2, 380.0], [96.3, 385.0], [96.4, 389.0], [96.5, 392.0], [96.6, 394.0], [96.7, 397.0], [96.8, 400.0], [96.9, 402.0], [97.0, 404.0], [97.1, 406.0], [97.2, 407.0], [97.3, 409.0], [97.4, 411.0], [97.5, 412.0], [97.6, 414.0], [97.7, 415.0], [97.8, 417.0], [97.9, 419.0], [98.0, 421.0], [98.1, 422.0], [98.2, 424.0], [98.3, 425.0], [98.4, 426.0], [98.5, 428.0], [98.6, 432.0], [98.7, 435.0], [98.8, 438.0], [98.9, 446.0], [99.0, 455.0], [99.1, 467.0], [99.2, 485.0], [99.3, 510.0], [99.4, 570.0], [99.5, 682.0], [99.6, 727.0], [99.7, 746.0], [99.8, 830.0], [99.9, 1125.0], [100.0, 141113.0]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[0.0, 47.0], [0.1, 66.0], [0.2, 66.0], [0.3, 67.0], [0.4, 67.0], [0.5, 68.0], [0.6, 68.0], [0.7, 68.0], [0.8, 68.0], [0.9, 69.0], [1.0, 69.0], [1.1, 69.0], [1.2, 69.0], [1.3, 69.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 71.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 71.0], [3.5, 71.0], [3.6, 71.0], [3.7, 71.0], [3.8, 71.0], [3.9, 72.0], [4.0, 72.0], [4.1, 72.0], [4.2, 72.0], [4.3, 72.0], [4.4, 72.0], [4.5, 72.0], [4.6, 72.0], [4.7, 72.0], [4.8, 72.0], [4.9, 72.0], [5.0, 72.0], [5.1, 72.0], [5.2, 72.0], [5.3, 72.0], [5.4, 72.0], [5.5, 72.0], [5.6, 72.0], [5.7, 72.0], [5.8, 72.0], [5.9, 72.0], [6.0, 72.0], [6.1, 73.0], [6.2, 73.0], [6.3, 73.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 73.0], [6.8, 73.0], [6.9, 73.0], [7.0, 73.0], [7.1, 73.0], [7.2, 73.0], [7.3, 73.0], [7.4, 73.0], [7.5, 73.0], [7.6, 73.0], [7.7, 73.0], [7.8, 73.0], [7.9, 73.0], [8.0, 73.0], [8.1, 73.0], [8.2, 73.0], [8.3, 74.0], [8.4, 74.0], [8.5, 74.0], [8.6, 74.0], [8.7, 74.0], [8.8, 74.0], [8.9, 74.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 74.0], [10.1, 74.0], [10.2, 74.0], [10.3, 74.0], [10.4, 74.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 74.0], [11.4, 74.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 75.0], [12.8, 75.0], [12.9, 75.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 76.0], [14.6, 76.0], [14.7, 76.0], [14.8, 76.0], [14.9, 76.0], [15.0, 76.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 76.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 76.0], [17.9, 76.0], [18.0, 76.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 77.0], [18.9, 77.0], [19.0, 77.0], [19.1, 77.0], [19.2, 77.0], [19.3, 77.0], [19.4, 77.0], [19.5, 77.0], [19.6, 77.0], [19.7, 77.0], [19.8, 77.0], [19.9, 77.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 77.0], [20.9, 77.0], [21.0, 77.0], [21.1, 77.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 78.0], [21.8, 78.0], [21.9, 78.0], [22.0, 78.0], [22.1, 78.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 78.0], [22.6, 78.0], [22.7, 78.0], [22.8, 78.0], [22.9, 78.0], [23.0, 78.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 78.0], [24.2, 78.0], [24.3, 78.0], [24.4, 78.0], [24.5, 78.0], [24.6, 78.0], [24.7, 78.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 79.0], [25.8, 79.0], [25.9, 79.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 79.0], [27.5, 79.0], [27.6, 79.0], [27.7, 79.0], [27.8, 80.0], [27.9, 80.0], [28.0, 80.0], [28.1, 80.0], [28.2, 80.0], [28.3, 80.0], [28.4, 80.0], [28.5, 80.0], [28.6, 80.0], [28.7, 80.0], [28.8, 80.0], [28.9, 80.0], [29.0, 80.0], [29.1, 80.0], [29.2, 80.0], [29.3, 80.0], [29.4, 80.0], [29.5, 80.0], [29.6, 80.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 80.0], [30.4, 80.0], [30.5, 80.0], [30.6, 80.0], [30.7, 80.0], [30.8, 81.0], [30.9, 81.0], [31.0, 81.0], [31.1, 81.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 81.0], [31.7, 81.0], [31.8, 81.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 81.0], [33.1, 81.0], [33.2, 81.0], [33.3, 82.0], [33.4, 82.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 82.0], [33.9, 82.0], [34.0, 82.0], [34.1, 82.0], [34.2, 82.0], [34.3, 82.0], [34.4, 82.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 82.0], [35.1, 82.0], [35.2, 82.0], [35.3, 82.0], [35.4, 82.0], [35.5, 82.0], [35.6, 82.0], [35.7, 82.0], [35.8, 82.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 83.0], [36.3, 83.0], [36.4, 83.0], [36.5, 83.0], [36.6, 83.0], [36.7, 83.0], [36.8, 83.0], [36.9, 83.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 83.0], [37.8, 83.0], [37.9, 83.0], [38.0, 84.0], [38.1, 84.0], [38.2, 84.0], [38.3, 84.0], [38.4, 84.0], [38.5, 84.0], [38.6, 84.0], [38.7, 84.0], [38.8, 84.0], [38.9, 84.0], [39.0, 84.0], [39.1, 84.0], [39.2, 84.0], [39.3, 84.0], [39.4, 84.0], [39.5, 84.0], [39.6, 84.0], [39.7, 84.0], [39.8, 84.0], [39.9, 84.0], [40.0, 84.0], [40.1, 84.0], [40.2, 85.0], [40.3, 85.0], [40.4, 85.0], [40.5, 85.0], [40.6, 85.0], [40.7, 85.0], [40.8, 85.0], [40.9, 85.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 85.0], [42.0, 85.0], [42.1, 86.0], [42.2, 86.0], [42.3, 86.0], [42.4, 86.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 86.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 87.0], [45.6, 88.0], [45.7, 88.0], [45.8, 88.0], [45.9, 88.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 88.0], [47.3, 88.0], [47.4, 89.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 90.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 90.0], [49.6, 90.0], [49.7, 90.0], [49.8, 90.0], [49.9, 90.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 91.0], [50.8, 91.0], [50.9, 91.0], [51.0, 91.0], [51.1, 91.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 91.0], [51.6, 91.0], [51.7, 91.0], [51.8, 91.0], [51.9, 91.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 92.0], [52.5, 92.0], [52.6, 92.0], [52.7, 92.0], [52.8, 92.0], [52.9, 92.0], [53.0, 92.0], [53.1, 92.0], [53.2, 92.0], [53.3, 92.0], [53.4, 92.0], [53.5, 92.0], [53.6, 92.0], [53.7, 92.0], [53.8, 92.0], [53.9, 92.0], [54.0, 92.0], [54.1, 92.0], [54.2, 92.0], [54.3, 92.0], [54.4, 93.0], [54.5, 93.0], [54.6, 93.0], [54.7, 93.0], [54.8, 93.0], [54.9, 93.0], [55.0, 93.0], [55.1, 93.0], [55.2, 93.0], [55.3, 93.0], [55.4, 93.0], [55.5, 93.0], [55.6, 93.0], [55.7, 93.0], [55.8, 93.0], [55.9, 93.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 93.0], [56.4, 93.0], [56.5, 94.0], [56.6, 94.0], [56.7, 94.0], [56.8, 94.0], [56.9, 94.0], [57.0, 94.0], [57.1, 94.0], [57.2, 94.0], [57.3, 94.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 95.0], [58.7, 95.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 95.0], [60.6, 95.0], [60.7, 95.0], [60.8, 95.0], [60.9, 96.0], [61.0, 96.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 96.0], [61.8, 96.0], [61.9, 96.0], [62.0, 96.0], [62.1, 96.0], [62.2, 96.0], [62.3, 96.0], [62.4, 96.0], [62.5, 96.0], [62.6, 96.0], [62.7, 96.0], [62.8, 96.0], [62.9, 96.0], [63.0, 96.0], [63.1, 96.0], [63.2, 96.0], [63.3, 96.0], [63.4, 97.0], [63.5, 97.0], [63.6, 97.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 97.0], [64.1, 97.0], [64.2, 97.0], [64.3, 97.0], [64.4, 97.0], [64.5, 97.0], [64.6, 97.0], [64.7, 97.0], [64.8, 97.0], [64.9, 97.0], [65.0, 97.0], [65.1, 97.0], [65.2, 97.0], [65.3, 97.0], [65.4, 97.0], [65.5, 97.0], [65.6, 97.0], [65.7, 97.0], [65.8, 97.0], [65.9, 98.0], [66.0, 98.0], [66.1, 98.0], [66.2, 98.0], [66.3, 98.0], [66.4, 98.0], [66.5, 98.0], [66.6, 98.0], [66.7, 98.0], [66.8, 98.0], [66.9, 98.0], [67.0, 98.0], [67.1, 98.0], [67.2, 98.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 98.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 98.0], [68.4, 98.0], [68.5, 99.0], [68.6, 99.0], [68.7, 99.0], [68.8, 99.0], [68.9, 99.0], [69.0, 99.0], [69.1, 99.0], [69.2, 99.0], [69.3, 99.0], [69.4, 99.0], [69.5, 99.0], [69.6, 99.0], [69.7, 99.0], [69.8, 99.0], [69.9, 99.0], [70.0, 99.0], [70.1, 99.0], [70.2, 99.0], [70.3, 99.0], [70.4, 99.0], [70.5, 99.0], [70.6, 99.0], [70.7, 99.0], [70.8, 100.0], [70.9, 100.0], [71.0, 100.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 100.0], [73.3, 101.0], [73.4, 101.0], [73.5, 101.0], [73.6, 101.0], [73.7, 101.0], [73.8, 101.0], [73.9, 101.0], [74.0, 101.0], [74.1, 101.0], [74.2, 101.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 101.0], [75.1, 101.0], [75.2, 101.0], [75.3, 101.0], [75.4, 101.0], [75.5, 102.0], [75.6, 102.0], [75.7, 102.0], [75.8, 102.0], [75.9, 102.0], [76.0, 102.0], [76.1, 102.0], [76.2, 102.0], [76.3, 102.0], [76.4, 102.0], [76.5, 102.0], [76.6, 102.0], [76.7, 102.0], [76.8, 102.0], [76.9, 102.0], [77.0, 102.0], [77.1, 102.0], [77.2, 102.0], [77.3, 102.0], [77.4, 102.0], [77.5, 102.0], [77.6, 103.0], [77.7, 103.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 103.0], [79.4, 103.0], [79.5, 104.0], [79.6, 104.0], [79.7, 104.0], [79.8, 104.0], [79.9, 104.0], [80.0, 104.0], [80.1, 104.0], [80.2, 104.0], [80.3, 104.0], [80.4, 104.0], [80.5, 104.0], [80.6, 104.0], [80.7, 104.0], [80.8, 104.0], [80.9, 104.0], [81.0, 105.0], [81.1, 105.0], [81.2, 105.0], [81.3, 105.0], [81.4, 105.0], [81.5, 105.0], [81.6, 105.0], [81.7, 105.0], [81.8, 105.0], [81.9, 105.0], [82.0, 105.0], [82.1, 105.0], [82.2, 105.0], [82.3, 105.0], [82.4, 106.0], [82.5, 106.0], [82.6, 106.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 106.0], [83.6, 107.0], [83.7, 107.0], [83.8, 107.0], [83.9, 107.0], [84.0, 107.0], [84.1, 107.0], [84.2, 107.0], [84.3, 107.0], [84.4, 107.0], [84.5, 107.0], [84.6, 107.0], [84.7, 108.0], [84.8, 108.0], [84.9, 108.0], [85.0, 108.0], [85.1, 108.0], [85.2, 108.0], [85.3, 108.0], [85.4, 108.0], [85.5, 108.0], [85.6, 109.0], [85.7, 109.0], [85.8, 109.0], [85.9, 109.0], [86.0, 109.0], [86.1, 109.0], [86.2, 109.0], [86.3, 109.0], [86.4, 110.0], [86.5, 110.0], [86.6, 110.0], [86.7, 110.0], [86.8, 110.0], [86.9, 110.0], [87.0, 110.0], [87.1, 111.0], [87.2, 111.0], [87.3, 111.0], [87.4, 111.0], [87.5, 111.0], [87.6, 111.0], [87.7, 112.0], [87.8, 112.0], [87.9, 112.0], [88.0, 112.0], [88.1, 112.0], [88.2, 113.0], [88.3, 113.0], [88.4, 113.0], [88.5, 113.0], [88.6, 113.0], [88.7, 114.0], [88.8, 114.0], [88.9, 114.0], [89.0, 114.0], [89.1, 115.0], [89.2, 115.0], [89.3, 115.0], [89.4, 116.0], [89.5, 116.0], [89.6, 116.0], [89.7, 116.0], [89.8, 117.0], [89.9, 117.0], [90.0, 117.0], [90.1, 118.0], [90.2, 118.0], [90.3, 118.0], [90.4, 119.0], [90.5, 119.0], [90.6, 120.0], [90.7, 120.0], [90.8, 121.0], [90.9, 122.0], [91.0, 122.0], [91.1, 123.0], [91.2, 123.0], [91.3, 124.0], [91.4, 125.0], [91.5, 126.0], [91.6, 126.0], [91.7, 127.0], [91.8, 128.0], [91.9, 129.0], [92.0, 130.0], [92.1, 131.0], [92.2, 133.0], [92.3, 134.0], [92.4, 136.0], [92.5, 137.0], [92.6, 139.0], [92.7, 141.0], [92.8, 143.0], [92.9, 145.0], [93.0, 148.0], [93.1, 151.0], [93.2, 154.0], [93.3, 157.0], [93.4, 160.0], [93.5, 164.0], [93.6, 167.0], [93.7, 171.0], [93.8, 175.0], [93.9, 181.0], [94.0, 186.0], [94.1, 190.0], [94.2, 195.0], [94.3, 205.0], [94.4, 211.0], [94.5, 221.0], [94.6, 232.0], [94.7, 242.0], [94.8, 256.0], [94.9, 275.0], [95.0, 300.0], [95.1, 317.0], [95.2, 324.0], [95.3, 333.0], [95.4, 342.0], [95.5, 354.0], [95.6, 361.0], [95.7, 366.0], [95.8, 370.0], [95.9, 373.0], [96.0, 378.0], [96.1, 382.0], [96.2, 385.0], [96.3, 388.0], [96.4, 391.0], [96.5, 393.0], [96.6, 396.0], [96.7, 399.0], [96.8, 401.0], [96.9, 404.0], [97.0, 406.0], [97.1, 408.0], [97.2, 409.0], [97.3, 411.0], [97.4, 412.0], [97.5, 413.0], [97.6, 415.0], [97.7, 417.0], [97.8, 418.0], [97.9, 420.0], [98.0, 421.0], [98.1, 423.0], [98.2, 424.0], [98.3, 425.0], [98.4, 428.0], [98.5, 431.0], [98.6, 434.0], [98.7, 439.0], [98.8, 444.0], [98.9, 451.0], [99.0, 457.0], [99.1, 475.0], [99.2, 498.0], [99.3, 527.0], [99.4, 606.0], [99.5, 676.0], [99.6, 729.0], [99.7, 744.0], [99.8, 791.0], [99.9, 1029.0]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[0.0, 38.0], [0.1, 66.0], [0.2, 67.0], [0.3, 67.0], [0.4, 68.0], [0.5, 68.0], [0.6, 68.0], [0.7, 68.0], [0.8, 69.0], [0.9, 69.0], [1.0, 69.0], [1.1, 69.0], [1.2, 69.0], [1.3, 69.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 71.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 71.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 71.0], [3.5, 71.0], [3.6, 71.0], [3.7, 71.0], [3.8, 72.0], [3.9, 72.0], [4.0, 72.0], [4.1, 72.0], [4.2, 72.0], [4.3, 72.0], [4.4, 72.0], [4.5, 72.0], [4.6, 72.0], [4.7, 72.0], [4.8, 72.0], [4.9, 72.0], [5.0, 72.0], [5.1, 72.0], [5.2, 72.0], [5.3, 72.0], [5.4, 72.0], [5.5, 72.0], [5.6, 72.0], [5.7, 72.0], [5.8, 72.0], [5.9, 73.0], [6.0, 73.0], [6.1, 73.0], [6.2, 73.0], [6.3, 73.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 73.0], [6.8, 73.0], [6.9, 73.0], [7.0, 73.0], [7.1, 73.0], [7.2, 73.0], [7.3, 73.0], [7.4, 73.0], [7.5, 73.0], [7.6, 73.0], [7.7, 73.0], [7.8, 73.0], [7.9, 73.0], [8.0, 73.0], [8.1, 74.0], [8.2, 74.0], [8.3, 74.0], [8.4, 74.0], [8.5, 74.0], [8.6, 74.0], [8.7, 74.0], [8.8, 74.0], [8.9, 74.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 74.0], [10.1, 74.0], [10.2, 74.0], [10.3, 74.0], [10.4, 74.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 75.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 75.0], [12.8, 75.0], [12.9, 75.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 76.0], [14.4, 76.0], [14.5, 76.0], [14.6, 76.0], [14.7, 76.0], [14.8, 76.0], [14.9, 76.0], [15.0, 76.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 76.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 77.0], [17.9, 77.0], [18.0, 77.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 77.0], [18.9, 77.0], [19.0, 77.0], [19.1, 77.0], [19.2, 77.0], [19.3, 77.0], [19.4, 77.0], [19.5, 77.0], [19.6, 77.0], [19.7, 77.0], [19.8, 77.0], [19.9, 77.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 77.0], [20.9, 77.0], [21.0, 78.0], [21.1, 78.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 78.0], [21.8, 78.0], [21.9, 78.0], [22.0, 78.0], [22.1, 78.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 78.0], [22.6, 78.0], [22.7, 78.0], [22.8, 78.0], [22.9, 78.0], [23.0, 78.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 78.0], [24.2, 78.0], [24.3, 78.0], [24.4, 79.0], [24.5, 79.0], [24.6, 79.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 79.0], [25.8, 79.0], [25.9, 79.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 80.0], [27.4, 80.0], [27.5, 80.0], [27.6, 80.0], [27.7, 80.0], [27.8, 80.0], [27.9, 80.0], [28.0, 80.0], [28.1, 80.0], [28.2, 80.0], [28.3, 80.0], [28.4, 80.0], [28.5, 80.0], [28.6, 80.0], [28.7, 80.0], [28.8, 80.0], [28.9, 80.0], [29.0, 80.0], [29.1, 80.0], [29.2, 80.0], [29.3, 80.0], [29.4, 80.0], [29.5, 80.0], [29.6, 80.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 80.0], [30.4, 80.0], [30.5, 81.0], [30.6, 81.0], [30.7, 81.0], [30.8, 81.0], [30.9, 81.0], [31.0, 81.0], [31.1, 81.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 81.0], [31.7, 81.0], [31.8, 81.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 82.0], [33.1, 82.0], [33.2, 82.0], [33.3, 82.0], [33.4, 82.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 82.0], [33.9, 82.0], [34.0, 82.0], [34.1, 82.0], [34.2, 82.0], [34.3, 82.0], [34.4, 82.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 82.0], [35.1, 82.0], [35.2, 82.0], [35.3, 82.0], [35.4, 82.0], [35.5, 82.0], [35.6, 83.0], [35.7, 83.0], [35.8, 83.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 83.0], [36.3, 83.0], [36.4, 83.0], [36.5, 83.0], [36.6, 83.0], [36.7, 83.0], [36.8, 83.0], [36.9, 83.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 84.0], [37.8, 84.0], [37.9, 84.0], [38.0, 84.0], [38.1, 84.0], [38.2, 84.0], [38.3, 84.0], [38.4, 84.0], [38.5, 84.0], [38.6, 84.0], [38.7, 84.0], [38.8, 84.0], [38.9, 84.0], [39.0, 84.0], [39.1, 84.0], [39.2, 84.0], [39.3, 84.0], [39.4, 84.0], [39.5, 84.0], [39.6, 84.0], [39.7, 84.0], [39.8, 84.0], [39.9, 85.0], [40.0, 85.0], [40.1, 85.0], [40.2, 85.0], [40.3, 85.0], [40.4, 85.0], [40.5, 85.0], [40.6, 85.0], [40.7, 85.0], [40.8, 85.0], [40.9, 85.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 86.0], [42.0, 86.0], [42.1, 86.0], [42.2, 86.0], [42.3, 86.0], [42.4, 86.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 87.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 88.0], [45.6, 88.0], [45.7, 88.0], [45.8, 88.0], [45.9, 88.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 89.0], [47.3, 89.0], [47.4, 89.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 90.0], [49.0, 90.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 90.0], [49.6, 90.0], [49.7, 90.0], [49.8, 90.0], [49.9, 90.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 91.0], [50.8, 91.0], [50.9, 91.0], [51.0, 91.0], [51.1, 91.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 91.0], [51.6, 91.0], [51.7, 91.0], [51.8, 91.0], [51.9, 91.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 92.0], [52.5, 92.0], [52.6, 92.0], [52.7, 92.0], [52.8, 92.0], [52.9, 92.0], [53.0, 92.0], [53.1, 92.0], [53.2, 92.0], [53.3, 92.0], [53.4, 92.0], [53.5, 92.0], [53.6, 92.0], [53.7, 92.0], [53.8, 92.0], [53.9, 92.0], [54.0, 92.0], [54.1, 92.0], [54.2, 92.0], [54.3, 92.0], [54.4, 93.0], [54.5, 93.0], [54.6, 93.0], [54.7, 93.0], [54.8, 93.0], [54.9, 93.0], [55.0, 93.0], [55.1, 93.0], [55.2, 93.0], [55.3, 93.0], [55.4, 93.0], [55.5, 93.0], [55.6, 93.0], [55.7, 93.0], [55.8, 93.0], [55.9, 93.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 94.0], [56.4, 94.0], [56.5, 94.0], [56.6, 94.0], [56.7, 94.0], [56.8, 94.0], [56.9, 94.0], [57.0, 94.0], [57.1, 94.0], [57.2, 94.0], [57.3, 94.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 95.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 95.0], [60.6, 95.0], [60.7, 95.0], [60.8, 95.0], [60.9, 95.0], [61.0, 96.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 96.0], [61.8, 96.0], [61.9, 96.0], [62.0, 96.0], [62.1, 96.0], [62.2, 96.0], [62.3, 96.0], [62.4, 96.0], [62.5, 96.0], [62.6, 96.0], [62.7, 96.0], [62.8, 96.0], [62.9, 96.0], [63.0, 96.0], [63.1, 96.0], [63.2, 96.0], [63.3, 96.0], [63.4, 96.0], [63.5, 97.0], [63.6, 97.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 97.0], [64.1, 97.0], [64.2, 97.0], [64.3, 97.0], [64.4, 97.0], [64.5, 97.0], [64.6, 97.0], [64.7, 97.0], [64.8, 97.0], [64.9, 97.0], [65.0, 97.0], [65.1, 97.0], [65.2, 97.0], [65.3, 97.0], [65.4, 97.0], [65.5, 97.0], [65.6, 97.0], [65.7, 97.0], [65.8, 97.0], [65.9, 97.0], [66.0, 97.0], [66.1, 98.0], [66.2, 98.0], [66.3, 98.0], [66.4, 98.0], [66.5, 98.0], [66.6, 98.0], [66.7, 98.0], [66.8, 98.0], [66.9, 98.0], [67.0, 98.0], [67.1, 98.0], [67.2, 98.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 98.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 98.0], [68.4, 98.0], [68.5, 98.0], [68.6, 98.0], [68.7, 99.0], [68.8, 99.0], [68.9, 99.0], [69.0, 99.0], [69.1, 99.0], [69.2, 99.0], [69.3, 99.0], [69.4, 99.0], [69.5, 99.0], [69.6, 99.0], [69.7, 99.0], [69.8, 99.0], [69.9, 99.0], [70.0, 99.0], [70.1, 99.0], [70.2, 99.0], [70.3, 99.0], [70.4, 99.0], [70.5, 99.0], [70.6, 99.0], [70.7, 99.0], [70.8, 99.0], [70.9, 99.0], [71.0, 100.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 100.0], [73.3, 100.0], [73.4, 101.0], [73.5, 101.0], [73.6, 101.0], [73.7, 101.0], [73.8, 101.0], [73.9, 101.0], [74.0, 101.0], [74.1, 101.0], [74.2, 101.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 101.0], [75.1, 101.0], [75.2, 101.0], [75.3, 101.0], [75.4, 101.0], [75.5, 101.0], [75.6, 101.0], [75.7, 102.0], [75.8, 102.0], [75.9, 102.0], [76.0, 102.0], [76.1, 102.0], [76.2, 102.0], [76.3, 102.0], [76.4, 102.0], [76.5, 102.0], [76.6, 102.0], [76.7, 102.0], [76.8, 102.0], [76.9, 102.0], [77.0, 102.0], [77.1, 102.0], [77.2, 102.0], [77.3, 102.0], [77.4, 102.0], [77.5, 102.0], [77.6, 102.0], [77.7, 102.0], [77.8, 102.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 103.0], [79.4, 103.0], [79.5, 103.0], [79.6, 103.0], [79.7, 104.0], [79.8, 104.0], [79.9, 104.0], [80.0, 104.0], [80.1, 104.0], [80.2, 104.0], [80.3, 104.0], [80.4, 104.0], [80.5, 104.0], [80.6, 104.0], [80.7, 104.0], [80.8, 104.0], [80.9, 104.0], [81.0, 104.0], [81.1, 104.0], [81.2, 104.0], [81.3, 105.0], [81.4, 105.0], [81.5, 105.0], [81.6, 105.0], [81.7, 105.0], [81.8, 105.0], [81.9, 105.0], [82.0, 105.0], [82.1, 105.0], [82.2, 105.0], [82.3, 105.0], [82.4, 105.0], [82.5, 105.0], [82.6, 105.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 106.0], [83.6, 106.0], [83.7, 106.0], [83.8, 107.0], [83.9, 107.0], [84.0, 107.0], [84.1, 107.0], [84.2, 107.0], [84.3, 107.0], [84.4, 107.0], [84.5, 107.0], [84.6, 107.0], [84.7, 107.0], [84.8, 108.0], [84.9, 108.0], [85.0, 108.0], [85.1, 108.0], [85.2, 108.0], [85.3, 108.0], [85.4, 108.0], [85.5, 108.0], [85.6, 108.0], [85.7, 109.0], [85.8, 109.0], [85.9, 109.0], [86.0, 109.0], [86.1, 109.0], [86.2, 109.0], [86.3, 109.0], [86.4, 110.0], [86.5, 110.0], [86.6, 110.0], [86.7, 110.0], [86.8, 110.0], [86.9, 110.0], [87.0, 110.0], [87.1, 111.0], [87.2, 111.0], [87.3, 111.0], [87.4, 111.0], [87.5, 111.0], [87.6, 111.0], [87.7, 112.0], [87.8, 112.0], [87.9, 112.0], [88.0, 112.0], [88.1, 112.0], [88.2, 113.0], [88.3, 113.0], [88.4, 113.0], [88.5, 113.0], [88.6, 113.0], [88.7, 114.0], [88.8, 114.0], [88.9, 114.0], [89.0, 114.0], [89.1, 115.0], [89.2, 115.0], [89.3, 115.0], [89.4, 116.0], [89.5, 116.0], [89.6, 116.0], [89.7, 116.0], [89.8, 117.0], [89.9, 117.0], [90.0, 117.0], [90.1, 118.0], [90.2, 118.0], [90.3, 118.0], [90.4, 119.0], [90.5, 119.0], [90.6, 120.0], [90.7, 120.0], [90.8, 120.0], [90.9, 121.0], [91.0, 122.0], [91.1, 122.0], [91.2, 123.0], [91.3, 123.0], [91.4, 124.0], [91.5, 124.0], [91.6, 125.0], [91.7, 126.0], [91.8, 127.0], [91.9, 128.0], [92.0, 129.0], [92.1, 130.0], [92.2, 131.0], [92.3, 132.0], [92.4, 134.0], [92.5, 135.0], [92.6, 137.0], [92.7, 138.0], [92.8, 140.0], [92.9, 142.0], [93.0, 144.0], [93.1, 146.0], [93.2, 148.0], [93.3, 150.0], [93.4, 153.0], [93.5, 156.0], [93.6, 160.0], [93.7, 163.0], [93.8, 168.0], [93.9, 172.0], [94.0, 177.0], [94.1, 184.0], [94.2, 190.0], [94.3, 195.0], [94.4, 201.0], [94.5, 211.0], [94.6, 220.0], [94.7, 230.0], [94.8, 241.0], [94.9, 255.0], [95.0, 269.0], [95.1, 288.0], [95.2, 308.0], [95.3, 318.0], [95.4, 325.0], [95.5, 333.0], [95.6, 341.0], [95.7, 354.0], [95.8, 361.0], [95.9, 367.0], [96.0, 372.0], [96.1, 376.0], [96.2, 381.0], [96.3, 385.0], [96.4, 389.0], [96.5, 392.0], [96.6, 395.0], [96.7, 398.0], [96.8, 399.0], [96.9, 402.0], [97.0, 404.0], [97.1, 406.0], [97.2, 408.0], [97.3, 409.0], [97.4, 411.0], [97.5, 413.0], [97.6, 414.0], [97.7, 416.0], [97.8, 417.0], [97.9, 419.0], [98.0, 421.0], [98.1, 422.0], [98.2, 423.0], [98.3, 425.0], [98.4, 426.0], [98.5, 428.0], [98.6, 431.0], [98.7, 435.0], [98.8, 439.0], [98.9, 443.0], [99.0, 452.0], [99.1, 457.0], [99.2, 473.0], [99.3, 497.0], [99.4, 533.0], [99.5, 634.0], [99.6, 722.0], [99.7, 739.0], [99.8, 793.0], [99.9, 1021.0], [100.0, 123358.0]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[0.0, 63.0], [0.1, 66.0], [0.2, 67.0], [0.3, 67.0], [0.4, 68.0], [0.5, 68.0], [0.6, 68.0], [0.7, 68.0], [0.8, 68.0], [0.9, 69.0], [1.0, 69.0], [1.1, 69.0], [1.2, 69.0], [1.3, 69.0], [1.4, 69.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 71.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 71.0], [3.5, 71.0], [3.6, 71.0], [3.7, 71.0], [3.8, 72.0], [3.9, 72.0], [4.0, 72.0], [4.1, 72.0], [4.2, 72.0], [4.3, 72.0], [4.4, 72.0], [4.5, 72.0], [4.6, 72.0], [4.7, 72.0], [4.8, 72.0], [4.9, 72.0], [5.0, 72.0], [5.1, 72.0], [5.2, 72.0], [5.3, 72.0], [5.4, 72.0], [5.5, 72.0], [5.6, 72.0], [5.7, 72.0], [5.8, 73.0], [5.9, 73.0], [6.0, 73.0], [6.1, 73.0], [6.2, 73.0], [6.3, 73.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 73.0], [6.8, 73.0], [6.9, 73.0], [7.0, 73.0], [7.1, 73.0], [7.2, 73.0], [7.3, 73.0], [7.4, 73.0], [7.5, 73.0], [7.6, 73.0], [7.7, 73.0], [7.8, 73.0], [7.9, 73.0], [8.0, 73.0], [8.1, 74.0], [8.2, 74.0], [8.3, 74.0], [8.4, 74.0], [8.5, 74.0], [8.6, 74.0], [8.7, 74.0], [8.8, 74.0], [8.9, 74.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 74.0], [10.1, 74.0], [10.2, 74.0], [10.3, 74.0], [10.4, 74.0], [10.5, 74.0], [10.6, 74.0], [10.7, 74.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 75.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 75.0], [12.8, 75.0], [12.9, 75.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 76.0], [14.3, 76.0], [14.4, 76.0], [14.5, 76.0], [14.6, 76.0], [14.7, 76.0], [14.8, 76.0], [14.9, 76.0], [15.0, 76.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 76.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 77.0], [17.9, 77.0], [18.0, 77.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 77.0], [18.9, 77.0], [19.0, 77.0], [19.1, 77.0], [19.2, 77.0], [19.3, 77.0], [19.4, 77.0], [19.5, 77.0], [19.6, 77.0], [19.7, 77.0], [19.8, 77.0], [19.9, 77.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 77.0], [20.9, 78.0], [21.0, 78.0], [21.1, 78.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 78.0], [21.8, 78.0], [21.9, 78.0], [22.0, 78.0], [22.1, 78.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 78.0], [22.6, 78.0], [22.7, 78.0], [22.8, 78.0], [22.9, 78.0], [23.0, 78.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 78.0], [24.2, 78.0], [24.3, 78.0], [24.4, 79.0], [24.5, 79.0], [24.6, 79.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 79.0], [25.8, 79.0], [25.9, 79.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 80.0], [27.5, 80.0], [27.6, 80.0], [27.7, 80.0], [27.8, 80.0], [27.9, 80.0], [28.0, 80.0], [28.1, 80.0], [28.2, 80.0], [28.3, 80.0], [28.4, 80.0], [28.5, 80.0], [28.6, 80.0], [28.7, 80.0], [28.8, 80.0], [28.9, 80.0], [29.0, 80.0], [29.1, 80.0], [29.2, 80.0], [29.3, 80.0], [29.4, 80.0], [29.5, 80.0], [29.6, 80.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 80.0], [30.4, 81.0], [30.5, 81.0], [30.6, 81.0], [30.7, 81.0], [30.8, 81.0], [30.9, 81.0], [31.0, 81.0], [31.1, 81.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 81.0], [31.7, 81.0], [31.8, 81.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 81.0], [33.1, 82.0], [33.2, 82.0], [33.3, 82.0], [33.4, 82.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 82.0], [33.9, 82.0], [34.0, 82.0], [34.1, 82.0], [34.2, 82.0], [34.3, 82.0], [34.4, 82.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 82.0], [35.1, 82.0], [35.2, 82.0], [35.3, 82.0], [35.4, 82.0], [35.5, 82.0], [35.6, 83.0], [35.7, 83.0], [35.8, 83.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 83.0], [36.3, 83.0], [36.4, 83.0], [36.5, 83.0], [36.6, 83.0], [36.7, 83.0], [36.8, 83.0], [36.9, 83.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 83.0], [37.8, 84.0], [37.9, 84.0], [38.0, 84.0], [38.1, 84.0], [38.2, 84.0], [38.3, 84.0], [38.4, 84.0], [38.5, 84.0], [38.6, 84.0], [38.7, 84.0], [38.8, 84.0], [38.9, 84.0], [39.0, 84.0], [39.1, 84.0], [39.2, 84.0], [39.3, 84.0], [39.4, 84.0], [39.5, 84.0], [39.6, 84.0], [39.7, 84.0], [39.8, 84.0], [39.9, 84.0], [40.0, 85.0], [40.1, 85.0], [40.2, 85.0], [40.3, 85.0], [40.4, 85.0], [40.5, 85.0], [40.6, 85.0], [40.7, 85.0], [40.8, 85.0], [40.9, 85.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 85.0], [42.0, 86.0], [42.1, 86.0], [42.2, 86.0], [42.3, 86.0], [42.4, 86.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 86.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 87.0], [45.6, 88.0], [45.7, 88.0], [45.8, 88.0], [45.9, 88.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 88.0], [47.3, 89.0], [47.4, 89.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 90.0], [49.0, 90.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 90.0], [49.6, 90.0], [49.7, 90.0], [49.8, 90.0], [49.9, 90.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 90.0], [50.8, 91.0], [50.9, 91.0], [51.0, 91.0], [51.1, 91.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 91.0], [51.6, 91.0], [51.7, 91.0], [51.8, 91.0], [51.9, 91.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 91.0], [52.5, 92.0], [52.6, 92.0], [52.7, 92.0], [52.8, 92.0], [52.9, 92.0], [53.0, 92.0], [53.1, 92.0], [53.2, 92.0], [53.3, 92.0], [53.4, 92.0], [53.5, 92.0], [53.6, 92.0], [53.7, 92.0], [53.8, 92.0], [53.9, 92.0], [54.0, 92.0], [54.1, 92.0], [54.2, 92.0], [54.3, 92.0], [54.4, 92.0], [54.5, 93.0], [54.6, 93.0], [54.7, 93.0], [54.8, 93.0], [54.9, 93.0], [55.0, 93.0], [55.1, 93.0], [55.2, 93.0], [55.3, 93.0], [55.4, 93.0], [55.5, 93.0], [55.6, 93.0], [55.7, 93.0], [55.8, 93.0], [55.9, 93.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 93.0], [56.4, 94.0], [56.5, 94.0], [56.6, 94.0], [56.7, 94.0], [56.8, 94.0], [56.9, 94.0], [57.0, 94.0], [57.1, 94.0], [57.2, 94.0], [57.3, 94.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 95.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 95.0], [60.6, 95.0], [60.7, 95.0], [60.8, 95.0], [60.9, 96.0], [61.0, 96.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 96.0], [61.8, 96.0], [61.9, 96.0], [62.0, 96.0], [62.1, 96.0], [62.2, 96.0], [62.3, 96.0], [62.4, 96.0], [62.5, 96.0], [62.6, 96.0], [62.7, 96.0], [62.8, 96.0], [62.9, 96.0], [63.0, 96.0], [63.1, 96.0], [63.2, 96.0], [63.3, 96.0], [63.4, 96.0], [63.5, 97.0], [63.6, 97.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 97.0], [64.1, 97.0], [64.2, 97.0], [64.3, 97.0], [64.4, 97.0], [64.5, 97.0], [64.6, 97.0], [64.7, 97.0], [64.8, 97.0], [64.9, 97.0], [65.0, 97.0], [65.1, 97.0], [65.2, 97.0], [65.3, 97.0], [65.4, 97.0], [65.5, 97.0], [65.6, 97.0], [65.7, 97.0], [65.8, 98.0], [65.9, 98.0], [66.0, 98.0], [66.1, 98.0], [66.2, 98.0], [66.3, 98.0], [66.4, 98.0], [66.5, 98.0], [66.6, 98.0], [66.7, 98.0], [66.8, 98.0], [66.9, 98.0], [67.0, 98.0], [67.1, 98.0], [67.2, 98.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 98.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 99.0], [68.4, 99.0], [68.5, 99.0], [68.6, 99.0], [68.7, 99.0], [68.8, 99.0], [68.9, 99.0], [69.0, 99.0], [69.1, 99.0], [69.2, 99.0], [69.3, 99.0], [69.4, 99.0], [69.5, 99.0], [69.6, 99.0], [69.7, 99.0], [69.8, 99.0], [69.9, 99.0], [70.0, 99.0], [70.1, 99.0], [70.2, 99.0], [70.3, 99.0], [70.4, 99.0], [70.5, 99.0], [70.6, 99.0], [70.7, 99.0], [70.8, 100.0], [70.9, 100.0], [71.0, 100.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 101.0], [73.3, 101.0], [73.4, 101.0], [73.5, 101.0], [73.6, 101.0], [73.7, 101.0], [73.8, 101.0], [73.9, 101.0], [74.0, 101.0], [74.1, 101.0], [74.2, 101.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 101.0], [75.1, 101.0], [75.2, 101.0], [75.3, 101.0], [75.4, 102.0], [75.5, 102.0], [75.6, 102.0], [75.7, 102.0], [75.8, 102.0], [75.9, 102.0], [76.0, 102.0], [76.1, 102.0], [76.2, 102.0], [76.3, 102.0], [76.4, 102.0], [76.5, 102.0], [76.6, 102.0], [76.7, 102.0], [76.8, 102.0], [76.9, 102.0], [77.0, 102.0], [77.1, 102.0], [77.2, 102.0], [77.3, 102.0], [77.4, 102.0], [77.5, 103.0], [77.6, 103.0], [77.7, 103.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 104.0], [79.4, 104.0], [79.5, 104.0], [79.6, 104.0], [79.7, 104.0], [79.8, 104.0], [79.9, 104.0], [80.0, 104.0], [80.1, 104.0], [80.2, 104.0], [80.3, 104.0], [80.4, 104.0], [80.5, 104.0], [80.6, 104.0], [80.7, 104.0], [80.8, 104.0], [80.9, 105.0], [81.0, 105.0], [81.1, 105.0], [81.2, 105.0], [81.3, 105.0], [81.4, 105.0], [81.5, 105.0], [81.6, 105.0], [81.7, 105.0], [81.8, 105.0], [81.9, 105.0], [82.0, 105.0], [82.1, 105.0], [82.2, 105.0], [82.3, 106.0], [82.4, 106.0], [82.5, 106.0], [82.6, 106.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 107.0], [83.6, 107.0], [83.7, 107.0], [83.8, 107.0], [83.9, 107.0], [84.0, 107.0], [84.1, 107.0], [84.2, 107.0], [84.3, 107.0], [84.4, 107.0], [84.5, 108.0], [84.6, 108.0], [84.7, 108.0], [84.8, 108.0], [84.9, 108.0], [85.0, 108.0], [85.1, 108.0], [85.2, 108.0], [85.3, 108.0], [85.4, 109.0], [85.5, 109.0], [85.6, 109.0], [85.7, 109.0], [85.8, 109.0], [85.9, 109.0], [86.0, 109.0], [86.1, 109.0], [86.2, 110.0], [86.3, 110.0], [86.4, 110.0], [86.5, 110.0], [86.6, 110.0], [86.7, 110.0], [86.8, 111.0], [86.9, 111.0], [87.0, 111.0], [87.1, 111.0], [87.2, 111.0], [87.3, 111.0], [87.4, 112.0], [87.5, 112.0], [87.6, 112.0], [87.7, 112.0], [87.8, 112.0], [87.9, 112.0], [88.0, 113.0], [88.1, 113.0], [88.2, 113.0], [88.3, 113.0], [88.4, 114.0], [88.5, 114.0], [88.6, 114.0], [88.7, 114.0], [88.8, 114.0], [88.9, 115.0], [89.0, 115.0], [89.1, 115.0], [89.2, 115.0], [89.3, 116.0], [89.4, 116.0], [89.5, 116.0], [89.6, 117.0], [89.7, 117.0], [89.8, 117.0], [89.9, 118.0], [90.0, 118.0], [90.1, 118.0], [90.2, 119.0], [90.3, 119.0], [90.4, 120.0], [90.5, 120.0], [90.6, 120.0], [90.7, 121.0], [90.8, 122.0], [90.9, 122.0], [91.0, 123.0], [91.1, 124.0], [91.2, 124.0], [91.3, 125.0], [91.4, 126.0], [91.5, 126.0], [91.6, 127.0], [91.7, 128.0], [91.8, 129.0], [91.9, 130.0], [92.0, 132.0], [92.1, 133.0], [92.2, 135.0], [92.3, 136.0], [92.4, 138.0], [92.5, 140.0], [92.6, 141.0], [92.7, 143.0], [92.8, 145.0], [92.9, 147.0], [93.0, 151.0], [93.1, 154.0], [93.2, 157.0], [93.3, 160.0], [93.4, 164.0], [93.5, 166.0], [93.6, 170.0], [93.7, 174.0], [93.8, 178.0], [93.9, 184.0], [94.0, 189.0], [94.1, 196.0], [94.2, 203.0], [94.3, 210.0], [94.4, 218.0], [94.5, 229.0], [94.6, 238.0], [94.7, 252.0], [94.8, 270.0], [94.9, 295.0], [95.0, 312.0], [95.1, 323.0], [95.2, 331.0], [95.3, 340.0], [95.4, 353.0], [95.5, 360.0], [95.6, 365.0], [95.7, 370.0], [95.8, 375.0], [95.9, 379.0], [96.0, 383.0], [96.1, 386.0], [96.2, 390.0], [96.3, 392.0], [96.4, 395.0], [96.5, 398.0], [96.6, 400.0], [96.7, 402.0], [96.8, 404.0], [96.9, 406.0], [97.0, 407.0], [97.1, 409.0], [97.2, 411.0], [97.3, 412.0], [97.4, 413.0], [97.5, 415.0], [97.6, 416.0], [97.7, 418.0], [97.8, 419.0], [97.9, 420.0], [98.0, 422.0], [98.1, 424.0], [98.2, 425.0], [98.3, 426.0], [98.4, 428.0], [98.5, 430.0], [98.6, 433.0], [98.7, 436.0], [98.8, 441.0], [98.9, 448.0], [99.0, 456.0], [99.1, 473.0], [99.2, 499.0], [99.3, 545.0], [99.4, 627.0], [99.5, 715.0], [99.6, 732.0], [99.7, 750.0], [99.8, 804.0], [99.9, 1098.0], [100.0, 95019.0]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 37242.0, "series": [{"data": [[0.0, 37242.0], [600.0, 54.0], [700.0, 139.0], [800.0, 29.0], [900.0, 15.0], [1000.0, 15.0], [1100.0, 7.0], [1200.0, 8.0], [1300.0, 21.0], [1400.0, 5.0], [1500.0, 1.0], [100.0, 12286.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 3.0], [2000.0, 1.0], [2300.0, 1.0], [2200.0, 2.0], [141100.0, 1.0], [200.0, 404.0], [300.0, 830.0], [400.0, 1297.0], [118800.0, 1.0], [500.0, 78.0], [127100.0, 1.0]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[0.0, 37130.0], [600.0, 63.0], [700.0, 156.0], [800.0, 29.0], [900.0, 12.0], [1000.0, 18.0], [1100.0, 3.0], [1200.0, 7.0], [1300.0, 15.0], [1400.0, 3.0], [100.0, 12307.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2200.0, 3.0], [2500.0, 2.0], [2800.0, 1.0], [192700.0, 1.0], [200.0, 389.0], [300.0, 900.0], [400.0, 1305.0], [500.0, 100.0], [128100.0, 1.0], [129800.0, 1.0]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[0.0, 37221.0], [2200.0, 1.0], [600.0, 63.0], [2400.0, 1.0], [2500.0, 2.0], [700.0, 127.0], [200.0, 405.0], [800.0, 27.0], [900.0, 17.0], [1000.0, 23.0], [1100.0, 4.0], [300.0, 875.0], [1200.0, 4.0], [4700.0, 1.0], [1300.0, 12.0], [1400.0, 4.0], [1500.0, 1.0], [100.0, 12266.0], [400.0, 1313.0], [1600.0, 2.0], [123300.0, 1.0], [500.0, 70.0]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[0.0, 37089.0], [2100.0, 2.0], [2200.0, 2.0], [600.0, 69.0], [2500.0, 1.0], [2600.0, 2.0], [700.0, 166.0], [200.0, 404.0], [800.0, 28.0], [900.0, 9.0], [1000.0, 20.0], [1100.0, 9.0], [300.0, 873.0], [1200.0, 6.0], [1300.0, 20.0], [1400.0, 4.0], [1500.0, 2.0], [95000.0, 1.0], [100.0, 12298.0], [400.0, 1370.0], [1600.0, 1.0], [500.0, 75.0], [2000.0, 2.0]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 192700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 208125.0, "series": [{"data": [[0.0, 208125.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1524.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 41.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 97.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61348814E12, "maxY": 100.0, "series": [{"data": [[1.61348832E12, 100.0], [1.6134885E12, 1.0], [1.6134882E12, 61.98295177788555], [1.61348838E12, 100.0], [1.61348826E12, 97.53006783469925], [1.61348844E12, 99.72560305583173], [1.61348814E12, 22.742587601078103]], "isOverall": false, "label": "OPENWEATHER_REQUESTS", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6134885E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 74.03448275862067, "minX": 1.0, "maxY": 192770.0, "series": [{"data": [[2.0, 35675.5], [3.0, 122.57142857142857], [4.0, 76.75], [5.0, 7567.470588235294], [6.0, 128.76923076923077], [7.0, 97.9047619047619], [8.0, 92.96296296296296], [9.0, 146.60000000000005], [10.0, 156.6296296296296], [11.0, 96.05405405405403], [12.0, 74.4318181818182], [13.0, 101.62162162162159], [14.0, 96.47619047619048], [15.0, 79.82758620689658], [16.0, 86.87037037037037], [17.0, 130.53846153846152], [18.0, 90.49230769230769], [19.0, 124.94545454545457], [20.0, 78.89189189189192], [21.0, 78.16249999999997], [22.0, 80.64285714285715], [23.0, 112.13559322033898], [24.0, 82.52127659574465], [25.0, 82.04255319148935], [26.0, 89.46341463414635], [27.0, 110.28378378378378], [28.0, 74.55555555555556], [29.0, 79.10810810810813], [30.0, 75.4857142857143], [31.0, 78.36283185840709], [32.0, 107.94736842105263], [33.0, 96.57142857142863], [34.0, 102.39583333333331], [35.0, 116.68749999999994], [36.0, 110.08163265306125], [37.0, 100.1157894736842], [38.0, 111.3714285714286], [39.0, 108.91071428571429], [40.0, 111.4803921568627], [41.0, 97.64285714285711], [42.0, 132.55555555555551], [43.0, 137.1415094339623], [44.0, 116.38095238095238], [45.0, 117.50806451612901], [46.0, 112.61983471074379], [47.0, 105.85156250000003], [48.0, 116.24369747899159], [49.0, 100.86764705882354], [50.0, 108.10638297872342], [51.0, 107.62068965517248], [52.0, 117.40769230769237], [53.0, 106.16], [54.0, 116.04580152671757], [55.0, 116.3943661971831], [56.0, 104.31645569620255], [57.0, 110.28481012658236], [58.0, 97.38364779874216], [59.0, 122.87974683544297], [60.0, 122.31428571428572], [61.0, 137.0447761194029], [62.0, 99.92452830188681], [63.0, 114.42771084337348], [64.0, 116.69375000000001], [65.0, 108.58125000000003], [66.0, 120.70270270270271], [67.0, 113.14207650273225], [68.0, 111.83422459893042], [69.0, 101.91794871794875], [70.0, 110.1223404255319], [71.0, 103.78461538461534], [72.0, 99.32019704433502], [73.0, 134.07878787878784], [74.0, 106.25388601036268], [75.0, 113.31753554502372], [76.0, 108.54901960784309], [77.0, 105.91133004926111], [78.0, 117.2794117647059], [79.0, 112.24884792626732], [80.0, 109.2442396313364], [81.0, 107.72897196261678], [82.0, 121.89767441860465], [83.0, 116.55675675675678], [84.0, 110.55454545454546], [85.0, 128.7748691099476], [86.0, 152.14364640883974], [87.0, 135.0000000000001], [88.0, 122.6971153846154], [89.0, 114.63436123348009], [90.0, 114.3941908713693], [91.0, 109.15573770491802], [92.0, 114.3177966101695], [93.0, 109.58620689655172], [94.0, 108.42741935483872], [95.0, 119.04508196721311], [96.0, 125.19502074688799], [97.0, 120.22270742358076], [98.0, 183.92777777777775], [99.0, 121.65277777777787], [100.0, 111.86177869331817]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[91.10369155670848, 117.04583937152078]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest-Aggregated", "isController": false}, {"data": [[2.0, 222.25], [3.0, 16345.5], [4.0, 9923.307692307693], [5.0, 79.06666666666666], [6.0, 111.83333333333334], [7.0, 158.30434782608697], [8.0, 74.03448275862067], [9.0, 118.43750000000001], [10.0, 110.96296296296296], [11.0, 91.4102564102564], [12.0, 80.86363636363636], [13.0, 102.52631578947367], [14.0, 128.17021276595744], [15.0, 76.09090909090908], [16.0, 96.76470588235296], [17.0, 122.46341463414632], [18.0, 87.05714285714286], [19.0, 119.93478260869567], [20.0, 75.41463414634148], [21.0, 80.29333333333334], [22.0, 77.59302325581393], [23.0, 113.74576271186442], [24.0, 75.33684210526314], [25.0, 78.21590909090912], [26.0, 85.74157303370785], [27.0, 106.66666666666666], [28.0, 82.09345794392524], [29.0, 78.11711711711717], [30.0, 78.07339449541281], [31.0, 77.8141592920354], [32.0, 94.65957446808507], [33.0, 79.48598130841121], [34.0, 102.53999999999999], [35.0, 95.60000000000002], [36.0, 118.90425531914896], [37.0, 128.2061855670103], [38.0, 107.45283018867924], [39.0, 106.17307692307696], [40.0, 123.2636363636364], [41.0, 121.78125000000003], [42.0, 117.6538461538462], [43.0, 119.25225225225229], [44.0, 119.06542056074767], [45.0, 118.01724137931033], [46.0, 99.26923076923079], [47.0, 97.15441176470588], [48.0, 111.5398230088496], [49.0, 124.47727272727268], [50.0, 110.33098591549299], [51.0, 100.44055944055948], [52.0, 112.16428571428565], [53.0, 106.84444444444443], [54.0, 118.93006993006992], [55.0, 137.39999999999998], [56.0, 109.17391304347825], [57.0, 107.66666666666671], [58.0, 97.90963855421688], [59.0, 117.35099337748348], [60.0, 114.14285714285717], [61.0, 150.5069444444445], [62.0, 114.1082802547771], [63.0, 117.21084337349399], [64.0, 107.05624999999999], [65.0, 121.94968553459123], [66.0, 128.50282485875707], [67.0, 100.1720430107527], [68.0, 99.48936170212768], [69.0, 106.29702970297032], [70.0, 107.43684210526315], [71.0, 99.35643564356437], [72.0, 114.98958333333333], [73.0, 138.14110429447845], [74.0, 115.68229166666667], [75.0, 114.3205741626795], [76.0, 122.58415841584164], [77.0, 108.05882352941177], [78.0, 106.64000000000006], [79.0, 104.6197183098591], [80.0, 120.16666666666667], [81.0, 107.79203539823], [82.0, 105.67632850241549], [83.0, 118.60106382978722], [84.0, 123.60377358490571], [85.0, 131.79581151832468], [86.0, 136.02105263157895], [87.0, 121.51960784313725], [88.0, 128.9189189189189], [89.0, 113.09649122807015], [90.0, 106.70212765957447], [91.0, 120.7404255319149], [92.0, 118.9246031746032], [93.0, 131.0796460176992], [94.0, 114.61111111111111], [95.0, 115.24901185770749], [96.0, 129.9529914529916], [97.0, 126.84680851063833], [98.0, 164.0304878048781], [99.0, 139.22608695652175], [100.0, 109.37958934432486], [1.0, 192770.0]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[91.088884652049, 118.86297426120085]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest-Aggregated", "isController": false}, {"data": [[2.0, 122.66666666666667], [3.0, 132.75], [4.0, 126.46153846153848], [5.0, 108.00000000000001], [6.0, 129.0], [7.0, 116.375], [8.0, 5003.64], [9.0, 128.57894736842104], [10.0, 98.0], [11.0, 84.45238095238093], [12.0, 95.65116279069767], [13.0, 102.63888888888889], [14.0, 87.47826086956522], [15.0, 78.2586206896552], [16.0, 88.06000000000002], [17.0, 128.97560975609764], [18.0, 79.109375], [19.0, 99.57407407407408], [20.0, 76.66666666666667], [21.0, 75.09999999999998], [22.0, 77.61445783132528], [23.0, 124.73333333333336], [24.0, 80.35483870967747], [25.0, 77.81720430107526], [26.0, 84.9625], [27.0, 116.28000000000007], [28.0, 79.1320754716981], [29.0, 81.09909909909909], [30.0, 80.95412844036696], [31.0, 93.8434782608696], [32.0, 92.29702970297029], [33.0, 92.40196078431374], [34.0, 103.42999999999999], [35.0, 100.22772277227718], [36.0, 112.73958333333337], [37.0, 108.35164835164832], [38.0, 110.32000000000002], [39.0, 113.88793103448278], [40.0, 101.96938775510205], [41.0, 112.74757281553397], [42.0, 132.4444444444445], [43.0, 120.99056603773585], [44.0, 125.63302752293576], [45.0, 119.11764705882356], [46.0, 97.9268292682927], [47.0, 118.18400000000004], [48.0, 102.94957983193275], [49.0, 125.58571428571435], [50.0, 102.5804195804196], [51.0, 105.88235294117652], [52.0, 108.14084507042257], [53.0, 114.12676056338027], [54.0, 102.4666666666667], [55.0, 130.85314685314688], [56.0, 105.17105263157892], [57.0, 102.01874999999995], [58.0, 117.58895705521478], [59.0, 112.46540880503144], [60.0, 123.29285714285719], [61.0, 140.85937500000006], [62.0, 126.88679245283019], [63.0, 118.40236686390529], [64.0, 115.08387096774192], [65.0, 136.6666666666666], [66.0, 112.20118343195263], [67.0, 113.30810810810806], [68.0, 104.55102040816321], [69.0, 100.73979591836735], [70.0, 108.5473684210526], [71.0, 114.43718592964814], [72.0, 126.13775510204084], [73.0, 139.0969696969697], [74.0, 108.81151832460729], [75.0, 100.03301886792447], [76.0, 111.64851485148517], [77.0, 107.50000000000004], [78.0, 114.36231884057969], [79.0, 109.83870967741937], [80.0, 108.53456221198155], [81.0, 111.21126760563376], [82.0, 109.6183574879227], [83.0, 147.27225130890048], [84.0, 125.39047619047614], [85.0, 117.46969696969697], [86.0, 148.21428571428572], [87.0, 129.43317972350235], [88.0, 116.0386473429951], [89.0, 114.39380530973447], [90.0, 114.75102040816326], [91.0, 110.00826446280996], [92.0, 107.01298701298691], [93.0, 122.99122807017544], [94.0, 110.12500000000003], [95.0, 128.01600000000002], [96.0, 117.80753138075312], [97.0, 117.76315789473685], [98.0, 161.7030303030303], [99.0, 146.4585152838428], [100.0, 108.44043651904077]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[91.09877955758957, 111.99473684210447]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest-Aggregated", "isController": false}, {"data": [[2.0, 132.5], [3.0, 84.3], [4.0, 107.16666666666666], [5.0, 90.78571428571429], [6.0, 207.7857142857143], [7.0, 92.4], [8.0, 82.65517241379311], [9.0, 167.77777777777783], [10.0, 118.35714285714285], [11.0, 93.7], [12.0, 74.47727272727272], [13.0, 93.77142857142859], [14.0, 90.4888888888889], [15.0, 77.01724137931035], [16.0, 94.07142857142856], [17.0, 115.61904761904762], [18.0, 76.953125], [19.0, 103.44000000000003], [20.0, 79.42857142857142], [21.0, 83.23456790123453], [22.0, 80.69047619047616], [23.0, 110.3606557377049], [24.0, 75.22988505747125], [25.0, 80.58510638297871], [26.0, 91.32142857142858], [27.0, 137.55999999999997], [28.0, 76.97196261682244], [29.0, 79.4090909090909], [30.0, 86.48648648648647], [31.0, 83.01818181818184], [32.0, 103.65346534653469], [33.0, 87.99038461538457], [34.0, 101.29411764705878], [35.0, 113.58947368421053], [36.0, 108.82653061224494], [37.0, 135.13978494623657], [38.0, 105.95454545454544], [39.0, 95.20192307692305], [40.0, 130.45192307692304], [41.0, 129.14953271028034], [42.0, 102.99038461538457], [43.0, 120.30188679245286], [44.0, 113.10784313725495], [45.0, 106.40983606557377], [46.0, 114.87999999999998], [47.0, 133.39705882352936], [48.0, 134.75], [49.0, 108.65413533834582], [50.0, 102.58108108108107], [51.0, 109.83941605839414], [52.0, 124.99270072992705], [53.0, 121.86805555555556], [54.0, 114.99999999999996], [55.0, 99.29365079365074], [56.0, 113.59235668789806], [57.0, 110.27096774193545], [58.0, 107.30898876404494], [59.0, 104.19230769230771], [60.0, 138.49253731343285], [61.0, 140.44186046511635], [62.0, 104.23493975903618], [63.0, 102.68263473053892], [64.0, 153.08860759493672], [65.0, 113.46583850931684], [66.0, 101.02234636871512], [67.0, 103.87078651685395], [68.0, 121.21649484536086], [69.0, 102.48186528497406], [70.0, 120.65104166666666], [71.0, 102.80499999999998], [72.0, 106.88499999999999], [73.0, 135.75949367088603], [74.0, 119.74634146341458], [75.0, 110.19512195121946], [76.0, 106.77227722772278], [77.0, 104.31904761904764], [78.0, 122.38308457711445], [79.0, 117.76923076923079], [80.0, 115.22596153846153], [81.0, 119.07339449541284], [82.0, 127.67307692307689], [83.0, 127.27692307692311], [84.0, 127.52709359605919], [85.0, 138.84577114427867], [86.0, 144.50802139037432], [87.0, 115.07655502392346], [88.0, 110.58293838862558], [89.0, 119.3419913419913], [90.0, 131.29875518672185], [91.0, 126.05957446808512], [92.0, 110.97095435684643], [93.0, 126.37053571428574], [94.0, 111.324], [95.0, 117.76953124999997], [96.0, 121.86752136752143], [97.0, 134.1652542372881], [98.0, 167.4878048780488], [99.0, 140.1999999999999], [100.0, 111.92927443350797]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}, {"data": [[91.0910338779482, 112.68322116942721]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.61348814E12, "maxY": 695687.6, "series": [{"data": [[1.61348832E12, 695687.6], [1.6134885E12, 69.45], [1.6134882E12, 408821.85], [1.61348838E12, 692558.6833333333], [1.61348826E12, 638130.9333333333], [1.61348844E12, 254096.7], [1.61348814E12, 98513.56666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61348832E12, 165608.56666666668], [1.6134885E12, 0.0], [1.6134882E12, 97773.66666666667], [1.61348838E12, 165581.86666666667], [1.61348826E12, 152584.16666666666], [1.61348844E12, 60657.96666666667], [1.61348814E12, 23558.633333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6134885E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 88.10642895732022, "minX": 1.61348814E12, "maxY": 192770.0, "series": [{"data": [[1.61348832E12, 107.87965725652202], [1.6134882E12, 111.9687987519502], [1.61348838E12, 106.31875047969922], [1.61348826E12, 120.38273968042613], [1.61348844E12, 180.96630389284223], [1.61348814E12, 91.81377825618924]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 107.66360434849237], [1.6134885E12, 192770.0], [1.6134882E12, 112.74415887850454], [1.61348838E12, 106.01863068312477], [1.61348826E12, 122.96653346653356], [1.61348844E12, 155.69395017793613], [1.61348814E12, 88.10642895732022]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 107.68059701492591], [1.6134882E12, 114.09025974025951], [1.61348838E12, 105.65232397607006], [1.61348826E12, 120.23974028136155], [1.61348844E12, 125.6488469601676], [1.61348814E12, 89.74217907227613]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 109.99593900850503], [1.6134882E12, 115.23730354591504], [1.61348838E12, 112.95307827953668], [1.61348826E12, 121.99933427644218], [1.61348844E12, 100.59882992060184], [1.61348814E12, 89.94345718901445]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6134885E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61348814E12, "maxY": 122.95979020979007, "series": [{"data": [[1.61348832E12, 107.53844388340572], [1.6134882E12, 111.95852834113354], [1.61348838E12, 106.31168930846574], [1.61348826E12, 120.37441744340883], [1.61348844E12, 99.94286312264538], [1.61348814E12, 91.78740581270158]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 107.3988669422754], [1.6134885E12, 0.0], [1.6134882E12, 112.73325545171372], [1.61348838E12, 106.0105037184691], [1.61348826E12, 122.95979020979007], [1.61348844E12, 101.68767008582788], [1.61348814E12, 88.08373851971909]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 107.3186375813243], [1.6134882E12, 114.07922077922053], [1.61348838E12, 105.64411719588888], [1.61348826E12, 120.23041704819765], [1.61348844E12, 99.77945492662485], [1.61348814E12, 89.71574973031282]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 109.69343345337516], [1.6134882E12, 115.22665281205367], [1.61348838E12, 105.6615809246339], [1.61348826E12, 121.9913455937424], [1.61348844E12, 100.59172586711232], [1.61348814E12, 89.91653204092636]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6134885E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61348814E12, "maxY": 5.786329386437041, "series": [{"data": [[1.61348832E12, 4.249560094866488], [1.6134882E12, 3.28627145085804], [1.61348838E12, 3.7760380689231634], [1.61348826E12, 4.464630492676432], [1.61348844E12, 2.5230221850146517], [1.61348814E12, 5.786329386437041]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 3.931404072883192], [1.6134885E12, 0.0], [1.6134882E12, 3.777777777777786], [1.61348838E12, 3.5141455186690282], [1.61348826E12, 4.471112221112239], [1.61348844E12, 4.0734770776638145], [1.61348814E12, 2.9670448406266923]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 4.079678530424789], [1.6134882E12, 4.051688311688311], [1.61348838E12, 3.250882037122267], [1.61348826E12, 4.634146341463413], [1.61348844E12, 2.8505241090146796], [1.61348814E12, 3.40884573894282]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest", "isController": false}, {"data": [[1.61348832E12, 5.25408014711517], [1.6134882E12, 4.9881802831536435], [1.61348838E12, 4.079659587518217], [1.61348826E12, 4.086544062578025], [1.61348844E12, 3.7958629335561977], [1.61348814E12, 3.3758750673128732]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6134885E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 63.0, "minX": 1.61348814E12, "maxY": 4733.0, "series": [{"data": [[1.61348832E12, 1684.0], [1.6134882E12, 2527.0], [1.61348838E12, 2810.0], [1.61348826E12, 4733.0], [1.61348844E12, 1956.0], [1.61348814E12, 1750.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61348832E12, 116.0], [1.6134882E12, 109.0], [1.61348838E12, 112.0], [1.61348826E12, 117.0], [1.61348844E12, 113.0], [1.61348814E12, 110.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61348832E12, 427.9900000000016], [1.6134882E12, 506.9800000000032], [1.61348838E12, 416.0], [1.61348826E12, 482.9800000000032], [1.61348844E12, 390.0], [1.61348814E12, 391.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61348832E12, 151.0], [1.6134882E12, 402.0], [1.61348838E12, 140.0], [1.61348826E12, 404.0], [1.61348844E12, 191.0], [1.61348814E12, 136.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61348832E12, 63.0], [1.6134882E12, 63.0], [1.61348838E12, 63.0], [1.61348826E12, 64.0], [1.61348844E12, 63.0], [1.61348814E12, 64.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61348832E12, 93.0], [1.6134882E12, 91.0], [1.61348838E12, 88.0], [1.61348826E12, 95.0], [1.61348844E12, 85.0], [1.61348814E12, 76.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61348844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 129854.0, "series": [{"data": [[13.0, 130.0], [30.0, 76.0], [35.0, 130.0], [36.0, 74.0], [51.0, 74.0], [56.0, 127.0], [58.0, 73.0], [80.0, 74.0], [85.0, 77.0], [95.0, 72.0], [111.0, 75.0], [115.0, 86.0], [141.0, 74.0], [140.0, 76.0], [139.0, 84.0], [147.0, 74.0], [151.0, 483.0], [155.0, 86.0], [156.0, 118.0], [186.0, 76.0], [184.0, 94.5], [196.0, 76.0], [212.0, 101.0], [218.0, 75.0], [221.0, 483.0], [254.0, 76.0], [251.0, 75.0], [261.0, 338.0], [278.0, 75.0], [276.0, 74.0], [293.0, 76.0], [307.0, 75.0], [312.0, 74.0], [313.0, 75.0], [311.0, 96.0], [317.0, 83.0], [323.0, 78.0], [326.0, 78.0], [334.0, 76.0], [320.0, 95.0], [333.0, 94.0], [330.0, 191.0], [339.0, 79.0], [347.0, 94.0], [353.0, 77.0], [365.0, 77.0], [356.0, 75.0], [359.0, 79.0], [358.0, 79.0], [355.0, 82.0], [362.0, 145.0], [381.0, 74.0], [379.0, 95.0], [368.0, 135.0], [392.0, 89.5], [402.0, 83.0], [424.0, 83.0], [434.0, 91.0], [451.0, 84.0], [452.0, 90.0], [462.0, 92.0], [449.0, 84.0], [459.0, 80.0], [476.0, 80.5], [473.0, 79.0], [480.0, 93.0], [496.0, 92.5], [498.0, 161.5], [531.0, 93.0], [528.0, 81.0], [524.0, 96.0], [512.0, 80.5], [533.0, 92.0], [534.0, 92.0], [521.0, 91.0], [523.0, 155.0], [544.0, 82.5], [559.0, 92.0], [560.0, 87.0], [562.0, 101.5], [574.0, 120.0], [563.0, 127.0], [564.0, 108.0], [567.0, 133.0], [578.0, 123.0], [604.0, 117.0], [605.0, 108.0], [606.0, 102.0], [608.0, 90.0], [610.0, 84.0], [623.0, 83.0], [637.0, 81.0], [628.0, 111.0], [645.0, 104.0], [658.0, 89.5], [660.0, 86.0], [656.0, 91.0], [642.0, 94.0], [655.0, 98.0], [662.0, 110.0], [673.0, 83.0], [685.0, 90.0], [675.0, 91.0], [676.0, 120.0], [698.0, 83.0], [683.0, 83.0], [688.0, 90.0], [687.0, 92.0], [684.0, 93.0], [702.0, 92.0], [712.0, 90.0], [730.0, 88.0], [714.0, 94.0], [723.0, 99.0], [729.0, 100.0], [713.0, 106.0], [742.0, 92.0], [763.0, 91.0], [753.0, 93.0], [762.0, 94.0], [767.0, 97.0], [755.0, 92.0], [757.0, 96.0], [744.0, 101.0], [773.0, 96.0], [790.0, 89.0], [771.0, 86.0], [783.0, 97.0], [791.0, 92.5], [793.0, 95.0], [781.0, 102.0], [780.0, 89.0], [784.0, 94.0], [796.0, 100.0], [825.0, 89.0], [812.0, 93.0], [808.0, 82.0], [811.0, 97.0], [806.0, 96.0], [816.0, 95.0], [823.0, 96.0], [821.0, 96.0], [802.0, 96.0], [804.0, 95.0], [830.0, 96.0], [845.0, 93.0], [838.0, 92.0], [842.0, 92.0], [840.0, 94.0], [833.0, 94.0], [862.0, 90.0], [849.0, 94.0], [863.0, 93.0], [855.0, 93.0], [850.0, 93.0], [856.0, 90.0], [839.0, 99.0], [857.0, 95.0], [859.0, 94.0], [844.0, 84.0], [834.0, 94.0], [890.0, 92.0], [879.0, 92.5], [891.0, 99.0], [892.0, 96.0], [878.0, 95.0], [876.0, 94.0], [885.0, 91.0], [883.0, 87.0], [889.0, 92.0], [865.0, 92.0], [866.0, 92.0], [873.0, 89.0], [875.0, 86.0], [880.0, 92.0], [893.0, 84.0], [882.0, 91.0], [920.0, 91.0], [899.0, 96.0], [898.0, 91.0], [896.0, 90.0], [903.0, 92.0], [900.0, 88.0], [917.0, 91.0], [922.0, 96.0], [914.0, 90.0], [924.0, 91.0], [911.0, 91.0], [910.0, 92.0], [909.0, 86.0], [925.0, 88.0], [912.0, 98.0], [927.0, 89.0], [952.0, 96.0], [951.0, 97.0], [945.0, 88.0], [934.0, 91.0], [939.0, 91.0], [937.0, 85.0], [958.0, 84.5], [956.0, 84.0], [929.0, 90.0], [944.0, 87.0], [932.0, 89.0], [930.0, 86.0], [935.0, 89.0], [984.0, 90.0], [962.0, 93.0], [979.0, 95.0], [981.0, 88.0], [960.0, 90.0], [968.0, 87.0], [971.0, 90.0], [975.0, 85.0], [969.0, 82.0], [988.0, 91.0], [965.0, 94.0], [964.0, 87.5], [966.0, 87.0], [976.0, 86.0], [991.0, 87.0], [978.0, 84.0], [961.0, 90.0], [985.0, 86.0], [987.0, 87.0], [1002.0, 91.0], [996.0, 89.0], [1010.0, 86.0], [993.0, 84.0], [992.0, 84.0], [1018.0, 85.0], [1000.0, 83.0], [1014.0, 87.0], [1052.0, 92.0], [1037.0, 85.0], [1065.0, 82.0], [1053.0, 83.0], [1042.0, 86.0], [1061.0, 81.0], [1049.0, 80.0], [1032.0, 84.0], [1133.0, 79.0], [1.0, 1326.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 129854.0], [564.0, 0.0], [330.0, 184.0], [362.0, 123358.0], [899.0, 95019.0], [960.0, 118866.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1133.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1321.0, "series": [{"data": [[13.0, 130.0], [30.0, 76.0], [35.0, 130.0], [36.0, 74.0], [51.0, 74.0], [56.0, 127.0], [58.0, 73.0], [80.0, 74.0], [85.0, 77.0], [95.0, 72.0], [111.0, 75.0], [115.0, 86.0], [141.0, 74.0], [140.0, 76.0], [139.0, 83.0], [147.0, 74.0], [151.0, 483.0], [155.0, 86.0], [156.0, 118.0], [186.0, 76.0], [184.0, 94.5], [196.0, 76.0], [212.0, 101.0], [218.0, 75.0], [221.0, 483.0], [254.0, 76.0], [251.0, 75.0], [261.0, 338.0], [278.0, 75.0], [276.0, 74.0], [293.0, 76.0], [307.0, 75.0], [312.0, 74.0], [313.0, 75.0], [311.0, 96.0], [317.0, 83.0], [323.0, 78.0], [326.0, 78.0], [334.0, 76.0], [320.0, 95.0], [333.0, 94.0], [330.0, 191.0], [339.0, 79.0], [347.0, 94.0], [353.0, 77.0], [365.0, 77.0], [356.0, 75.0], [359.0, 79.0], [358.0, 79.0], [355.0, 82.0], [362.0, 145.0], [381.0, 74.0], [379.0, 95.0], [368.0, 135.0], [392.0, 89.5], [402.0, 83.0], [424.0, 83.0], [434.0, 91.0], [451.0, 84.0], [452.0, 90.0], [462.0, 92.0], [449.0, 84.0], [459.0, 80.0], [476.0, 80.0], [473.0, 79.0], [480.0, 93.0], [496.0, 92.5], [498.0, 161.5], [531.0, 93.0], [528.0, 81.0], [524.0, 96.0], [512.0, 80.5], [533.0, 92.0], [534.0, 92.0], [521.0, 91.0], [523.0, 155.0], [544.0, 82.5], [559.0, 91.0], [560.0, 87.0], [562.0, 101.5], [574.0, 120.0], [563.0, 127.0], [564.0, 108.0], [567.0, 133.0], [578.0, 123.0], [604.0, 117.0], [605.0, 108.0], [606.0, 102.0], [608.0, 90.0], [610.0, 83.5], [623.0, 83.0], [637.0, 81.0], [628.0, 111.0], [645.0, 104.0], [658.0, 89.5], [660.0, 86.0], [656.0, 91.0], [642.0, 94.0], [655.0, 98.0], [662.0, 110.0], [673.0, 83.0], [685.0, 90.0], [675.0, 91.0], [676.0, 120.0], [698.0, 83.0], [683.0, 83.0], [688.0, 90.0], [687.0, 92.0], [684.0, 93.0], [702.0, 92.0], [712.0, 90.0], [730.0, 88.0], [714.0, 94.0], [723.0, 99.0], [729.0, 100.0], [713.0, 106.0], [742.0, 92.0], [763.0, 91.0], [753.0, 93.0], [762.0, 94.0], [767.0, 97.0], [755.0, 92.0], [757.0, 96.0], [744.0, 101.0], [773.0, 96.0], [790.0, 89.0], [771.0, 86.0], [783.0, 97.0], [791.0, 92.5], [793.0, 95.0], [781.0, 102.0], [780.0, 89.0], [784.0, 94.0], [796.0, 100.0], [825.0, 89.0], [812.0, 93.0], [808.0, 82.0], [811.0, 97.0], [806.0, 96.0], [816.0, 95.0], [823.0, 95.5], [821.0, 96.0], [802.0, 96.0], [804.0, 95.0], [830.0, 96.0], [845.0, 93.0], [838.0, 92.0], [842.0, 92.0], [840.0, 94.0], [833.0, 94.0], [862.0, 90.0], [849.0, 94.0], [863.0, 93.0], [855.0, 93.0], [850.0, 93.0], [856.0, 90.0], [839.0, 99.0], [857.0, 95.0], [859.0, 94.0], [844.0, 84.0], [834.0, 94.0], [890.0, 92.0], [879.0, 92.5], [891.0, 99.0], [892.0, 96.0], [878.0, 95.0], [876.0, 94.0], [885.0, 91.0], [883.0, 87.0], [889.0, 92.0], [865.0, 92.0], [866.0, 92.0], [873.0, 88.0], [875.0, 86.0], [880.0, 92.0], [893.0, 84.0], [882.0, 91.0], [920.0, 91.0], [899.0, 96.0], [898.0, 91.0], [896.0, 90.0], [903.0, 91.0], [900.0, 88.0], [917.0, 91.0], [922.0, 96.0], [914.0, 90.0], [924.0, 91.0], [911.0, 91.0], [910.0, 92.0], [909.0, 86.0], [925.0, 88.0], [912.0, 98.0], [927.0, 89.0], [952.0, 96.0], [951.0, 97.0], [945.0, 88.0], [934.0, 91.0], [939.0, 91.0], [937.0, 85.0], [958.0, 84.0], [956.0, 84.0], [929.0, 90.0], [944.0, 87.0], [932.0, 89.0], [930.0, 86.0], [935.0, 89.0], [984.0, 90.0], [962.0, 93.0], [979.0, 95.0], [981.0, 88.0], [960.0, 90.0], [968.0, 87.0], [971.0, 89.0], [975.0, 85.0], [969.0, 82.0], [988.0, 91.0], [965.0, 94.0], [964.0, 87.5], [966.0, 87.0], [976.0, 86.0], [991.0, 87.0], [978.0, 84.0], [961.0, 90.0], [985.0, 86.0], [987.0, 87.0], [1002.0, 91.0], [996.0, 89.0], [1010.0, 86.0], [993.0, 84.0], [992.0, 84.0], [1018.0, 85.0], [1000.0, 83.0], [1014.0, 87.0], [1052.0, 92.0], [1037.0, 85.0], [1065.0, 82.0], [1053.0, 83.0], [1042.0, 86.0], [1061.0, 81.0], [1049.0, 80.0], [1032.0, 84.0], [1133.0, 79.0], [1.0, 1321.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [564.0, 0.0], [330.0, 0.0], [362.0, 0.0], [899.0, 0.0], [960.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1133.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 124.21666666666667, "minX": 1.61348814E12, "maxY": 870.8, "series": [{"data": [[1.61348832E12, 870.8], [1.6134882E12, 514.0833333333334], [1.61348838E12, 869.2333333333333], [1.61348826E12, 801.25], [1.61348844E12, 316.8666666666667], [1.61348814E12, 124.21666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61348844E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61348814E12, "maxY": 869.3333333333334, "series": [{"data": [[1.6134885E12, 0.016666666666666666], [1.61348838E12, 0.016666666666666666], [1.61348844E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.61348832E12, 869.3333333333334], [1.6134882E12, 513.25], [1.61348838E12, 869.2], [1.61348826E12, 800.9666666666667], [1.61348844E12, 318.4166666666667], [1.61348814E12, 123.66666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61348832E12, 1.4833333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6134885E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61348814E12, "maxY": 217.4, "series": [{"data": [[1.61348832E12, 217.18333333333334], [1.6134882E12, 128.31666666666666], [1.61348838E12, 217.36666666666667], [1.61348826E12, 200.28333333333333], [1.61348844E12, 79.76666666666667], [1.61348814E12, 30.95]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest-success", "isController": false}, {"data": [[1.61348832E12, 0.3333333333333333], [1.61348838E12, 0.016666666666666666]], "isOverall": false, "label": "CityWeather_ByName_HTTPRequest-failure", "isController": false}, {"data": [[1.61348832E12, 217.36666666666667], [1.6134882E12, 128.4], [1.61348838E12, 217.38333333333333], [1.61348826E12, 200.2], [1.61348844E12, 79.58333333333333], [1.61348814E12, 30.85]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest-success", "isController": false}, {"data": [[1.61348832E12, 217.38333333333333], [1.6134882E12, 128.33333333333334], [1.61348838E12, 217.3], [1.61348826E12, 200.21666666666667], [1.61348844E12, 79.48333333333333], [1.61348814E12, 30.9]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest-success", "isController": false}, {"data": [[1.61348832E12, 0.36666666666666664], [1.61348844E12, 0.016666666666666666]], "isOverall": false, "label": "CityWeather_ByID_HTTPRequest-failure", "isController": false}, {"data": [[1.61348832E12, 217.4], [1.6134882E12, 128.2], [1.61348838E12, 217.15], [1.61348826E12, 200.26666666666668], [1.61348844E12, 79.58333333333333], [1.61348814E12, 30.966666666666665]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest-success", "isController": false}, {"data": [[1.61348832E12, 0.45], [1.61348844E12, 0.05]], "isOverall": false, "label": "CityWeather_ByLatLon_HTTPRequest-failure", "isController": false}, {"data": [[1.61348832E12, 0.3333333333333333], [1.6134885E12, 0.016666666666666666], [1.61348844E12, 0.03333333333333333]], "isOverall": false, "label": "CityWeather_ByZip_HTTPRequest-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6134885E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61348814E12, "maxY": 869.3333333333334, "series": [{"data": [[1.61348832E12, 869.3333333333334], [1.6134882E12, 513.25], [1.61348838E12, 869.2], [1.61348826E12, 800.9666666666667], [1.61348844E12, 318.4166666666667], [1.61348814E12, 123.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61348832E12, 1.4833333333333334], [1.6134885E12, 0.016666666666666666], [1.61348838E12, 0.016666666666666666], [1.61348844E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6134885E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

